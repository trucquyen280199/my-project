[{"D:\\my-project\\duAn3-quan_ly_cong_viec\\src\\index.js":"1","D:\\my-project\\duAn3-quan_ly_cong_viec\\src\\App.js":"2","D:\\my-project\\duAn3-quan_ly_cong_viec\\src\\reportWebVitals.js":"3","D:\\my-project\\duAn3-quan_ly_cong_viec\\src\\component\\taskForm.js":"4","D:\\my-project\\duAn3-quan_ly_cong_viec\\src\\component\\Control.js":"5","D:\\my-project\\duAn3-quan_ly_cong_viec\\src\\component\\TaskList.js":"6","D:\\my-project\\duAn3-quan_ly_cong_viec\\src\\component\\Search.js":"7","D:\\my-project\\duAn3-quan_ly_cong_viec\\src\\component\\Sort.js":"8","D:\\my-project\\duAn3-quan_ly_cong_viec\\src\\component\\taskItem.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":7542,"mtime":1620446556336,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":4008,"mtime":1620353557541,"results":"14","hashOfConfig":"11"},{"size":490,"mtime":1620380312502,"results":"15","hashOfConfig":"11"},{"size":3086,"mtime":1620357285578,"results":"16","hashOfConfig":"11"},{"size":1422,"mtime":1620376865809,"results":"17","hashOfConfig":"11"},{"size":1953,"mtime":1620448736628,"results":"18","hashOfConfig":"11"},{"size":1415,"mtime":1620356566977,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"3ix2fc",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\my-project\\duAn3-quan_ly_cong_viec\\src\\index.js",[],["42","43"],"D:\\my-project\\duAn3-quan_ly_cong_viec\\src\\App.js",["44"],"D:\\my-project\\duAn3-quan_ly_cong_viec\\src\\reportWebVitals.js",[],"D:\\my-project\\duAn3-quan_ly_cong_viec\\src\\component\\taskForm.js",["45"],"import React, { Component, useState } from 'react';\r\n\r\nclass TaskForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id : '',\r\n            name : '',\r\n            status : false\r\n        }\r\n    }\r\n    // let [states, setState] = useState({\r\n    //     id : '',\r\n    //     name : '',\r\n    //     status : false\r\n    // })\r\n\r\n    componentDidMount() {\r\n        if(this.props.itemEditing && this.props.itemEditing.id !== null){\r\n            this.setState({\r\n                id : this.props.itemEditing.id,\r\n                name : this.props.itemEditing.name,\r\n                status : this.props.itemEditing.status\r\n            });\r\n        }else{\r\n            this.onClear();\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps && nextProps.itemEditing){\r\n            this.setState({\r\n                id : nextProps.itemEditing.id,\r\n                name : nextProps.itemEditing.name,\r\n                status : nextProps.itemEditing.status\r\n            });\r\n        }else{\r\n            this.onClear();\r\n        }\r\n    }\r\n\r\n    onHandleChange = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n\r\n    onHandleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSave(this.state);\r\n        this.onClear();\r\n        this.onExitForm();\r\n        console.log()\r\n    }\r\n\r\n    onClear = () => {\r\n        this.setState({\r\n            id : '',\r\n            name : '',\r\n            status : false\r\n        });\r\n    }\r\n\r\n    onExitForm = () => {\r\n        this.props.onExitForm();\r\n    }\r\n    render(){\r\n\r\n    \r\n        return (\r\n            <div className=\"panel panel-warning border rounded\" style={{overflow: \"hidden\"}}>\r\n                <div className=\"panel-heading d-flex justify-content-between text-white bg-dark border-bottom p-2 \">\r\n                    <h4 className=\"panel-title\">Thêm Công Việc</h4>\r\n                    <span\r\n                        className=\"fa fa-times-circle text-right\"\r\n                        onClick={this.onExitForm}\r\n                    >X</span>\r\n                </div>\r\n                <div className=\"panel-body p-2\">\r\n                    <form onSubmit={this.onHandleSubmit} >\r\n                        <div className=\"form-group text-left\">\r\n                            <label>Tên :</label>\r\n                            <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"name\"\r\n                                    value={this.state.name}\r\n                                    onChange={ this.onHandleChange }\r\n                                />\r\n                        </div>\r\n                        <div className=\"text-left\" >\r\n                            <label>Trạng Thái :</label>\r\n                            <select className=\"form-control\" \r\n                                    name=\"status\" \r\n                                    value={ this.state.status } \r\n                                    onChange={ this.onHandleChange } \r\n                                > \r\n                                <option value={true}>Kích Hoạt</option> \r\n                                <option value={false}>Ẩn</option> \r\n                            </select>\r\n                        </div>\r\n                        <br/>\r\n                        <div className=\"text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-warning\" >Thêm</button>&nbsp;\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={ this.onClear } >Hủy Bỏ</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TaskForm;","D:\\my-project\\duAn3-quan_ly_cong_viec\\src\\component\\Control.js",["46"],"import React, { Component, useState } from 'react';\r\nimport Search from './Search';\r\nimport Sort from './Sort';\r\n\r\n\r\nclass Control extends Component {\r\n    render(){\r\n        return (\r\n            <div className=\"row col-12 my-2 px-0\">\r\n                <Search onSearch={ this.props.onSearch} />\r\n                <Sort onSort ={ this.props.onSort } sortBy = { this.props.sortBy } sortValue = { this.props.sortValue } />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Control;\r\n","D:\\my-project\\duAn3-quan_ly_cong_viec\\src\\component\\TaskList.js",[],"D:\\my-project\\duAn3-quan_ly_cong_viec\\src\\component\\Search.js",[],"D:\\my-project\\duAn3-quan_ly_cong_viec\\src\\component\\Sort.js",["47","48","49","50"],"import React, { Component } from 'react';\r\n\r\nclass Sort extends Component {\r\n    \r\n    onClick = (sortBy, sortValue)=>{\r\n       \r\n        this.props.onSort(sortBy,sortValue );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                <div className=\"dropdown\">\r\n                    <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\r\n                        Sắp Xếp \r\n                    </button>\r\n                    <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n                        <li className=\"pl-2\" onClick={ () => this.onClick('name', 1) }>\r\n                            <a role=\"button\" className={ (this.props.sortBy === \"name\" & this.props.sortValue === 1) ? \"sort-selected\" : \"\" }>\r\n                                Tên A-Z\r\n                            </a>\r\n                        </li>\r\n                        <li className=\"pl-2\" onClick={ () => this.onClick('name', -1) }>\r\n                            <a role=\"button\" className={ (this.props.sortBy === \"name\" & this.props.sortValue === -1) ? \"sort-selected\" : \"\" }>Tên Z-A </a>\r\n                        </li>\r\n                        {/* <li  role=\"separator\" className=\"divider pl-2\"></li> */}\r\n                        <li className=\"pl-2\"><a role=\"button\" onClick={ () => this.onClick('status', 1) } className={ (this.props.sortBy === \"status\" & this.props.sortValue === 1) ? \"sort-selected\" : \"\" }>Trạng Thái Kích Hoạt</a></li>\r\n                        <li className=\"pl-2\"><a role=\"button\" onClick={ () => this.onClick('status', -1) } className={ (this.props.sortBy === \"status\" & this.props.sortValue === -1) ? \"sort-selected\" : \"\" }>Trạng Thái Ẩn</a></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )    \r\n    }\r\n}\r\nexport default Sort;","D:\\my-project\\duAn3-quan_ly_cong_viec\\src\\component\\taskItem.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":28,"nodeType":"57","messageId":"58","endLine":1,"endColumn":36},{"ruleId":"55","severity":1,"message":"56","line":1,"column":28,"nodeType":"57","messageId":"58","endLine":1,"endColumn":36},{"ruleId":"55","severity":1,"message":"56","line":1,"column":28,"nodeType":"57","messageId":"58","endLine":1,"endColumn":36},{"ruleId":"59","severity":1,"message":"60","line":19,"column":29,"nodeType":"61","endLine":19,"endColumn":143},{"ruleId":"59","severity":1,"message":"60","line":24,"column":29,"nodeType":"61","endLine":24,"endColumn":144},{"ruleId":"59","severity":1,"message":"60","line":27,"column":46,"nodeType":"61","endLine":27,"endColumn":206},{"ruleId":"59","severity":1,"message":"60","line":28,"column":46,"nodeType":"61","endLine":28,"endColumn":208},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]